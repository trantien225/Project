@model Project.Models.Storage
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage1.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="~/admin/Content/Clients/index.html" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="~/admin/Storage/Index" class="nav-link">Nhập Hàng</a>
        </li>
    </ul>
}
<div class="card-body">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Create", "Storage", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {@Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form-group">
                <div class="row">
                    <div class="col-6">
                        @Html.LabelFor(t => t.ProductId)
                        @Html.DropDownListFor(t => t.ProductId, new SelectList(ViewBag.Products, "ProductId", "ProductId"), "Vui lòng chọn  sản phẩm...", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-2">
                        @Html.LabelFor(t => t.Price)
                        @Html.TextBoxFor(t => t.Price, new { @class = "form-control", placeholder = "Nhập giá sản phẩm", @type = "number", min = 0 })
                        @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-2">
                        @Html.LabelFor(t => t.Quantity)
                        @Html.TextBoxFor(t => t.Quantity, new { @class = "form-control", placeholder = "Nhập số lượng sản phẩm", @type = "number", max = 100, min = 0 })
                        @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-2">
                        @*@Html.LabelFor(t => t.Unit)
                            @Html.TextBoxFor(t => t.Unit, new { @class = "form-control", placeholder = "Đơn vị" })
                            @Html.ValidationMessageFor(x => x.Unit, "", new { @class = "text-danger" })*@
                        @Html.LabelFor(t => t.Unit)
                        @Html.DropDownListFor(t => t.Unit, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Cái", Value = "Option1" },
                            new SelectListItem { Text = "Chiếc", Value = "Option2" }
                        }, "-- Chọn đơn vị --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Unit, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-2">
                        @Html.LabelFor(t => t.DateCreate)
                        <div class="input-group date" id="reservationdate" data-target-input="nearest">
                            @Html.TextBoxFor(t => t.DateCreate, new { type = "text", @class = "form-control datetimepicker-input", placeholder = "Ngày nhập sản phẩm" })
                            <div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-secondary">Nhập hàng</button>
            </div>

        }
        </div>
    </div>
</div>
